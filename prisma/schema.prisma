// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          Int          @id @default(autoincrement())
    email       String       @unique
    password    String
    isAdmin     Boolean      @default(false)
    isStaff     Boolean      @default(false)
    createdAt   DateTime     @default(now())
    submissions Submission[]
    bookings     Booking[]
}

model Bicycle {
    id      Int           @id @default(autoincrement())
    qrCode  String        @unique
    status  BicycleStatus
    model   BicycleModel  @relation(fields: [modelId], references: [id])
    modelId Int
    bookings     Booking[]
}

model BicycleModel {
    id          Int          @id @default(autoincrement())
    name        String       @unique
    description String
    // el número de bicicletas reservadas para este modelo
    image       String?
    bicycles    Bicycle[]
    Submission  Submission[]
}

model Submission {
    id             Int          @id @default(autoincrement())
    user           User         @relation(fields: [userId], references: [id])
    model          BicycleModel @relation(fields: [bicycleModelId], references: [id])
    userId         Int          @unique
    bicycleModelId Int
}

model Booking {
    id          Int      @id @default(autoincrement())
    user        User     @relation(fields: [userId], references: [id])
    userId      Int
    bicycle     Bicycle  @relation(fields: [bicycleId], references: [id])
    bicycleId   Int
    start       DateTime @default(now())
    end         DateTime?
}

enum BicycleStatus {
    HABILITADA // puede estar disponible o arrendada. 
    REPARACION // no está prestada pero está averiada
    INHABILITADA // se considera perdida/destruida
}
