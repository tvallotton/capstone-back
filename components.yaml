components:
  responses:
    Booking:
      description: Returns the booking.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              booking:
                $ref: "#/components/schemas/Booking"

    BicycleModel:
      description: Returns the bicycle model.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              model:
                $ref: "#/components/schemas/BicycleModel"

    BicycleHistory:
      description: Returns the bicycle history.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              bicycleHistory:
                $ref: "#/components/schemas/BicycleHistory"

    Submission:
      description: Returns the submission form.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              model:
                $ref: "#/components/schemas/Submission"
    Bicycle:
      description: Returns the bicycle
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              bicycle:
                $ref: "#/components/schemas/Bicycle"

    User:
      description: Returns the user
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              user:
                $ref: "#/components/schemas/User"
    UserHistory:
      description: Returns the user history
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              user:
                $ref: "#/components/schemas/UserHistory"
    BadRequest:
      description: The parameters for this request where invalid or missing
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: The resource was not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Returned when the user is not authenticated.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Forbidden:
      description: Returned when the user doesn't have sufficient permissions to access the resource.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    ExitFormInput:
      type: object
      properties:
        bicycleReview:
          type: integer
      accessoryReview:
        type: integer
      suggestions:
        type: string
      parkingSpot:
        type: string
      bookingId:
        type: integer
    ExitForm:
      type: object
      properties:
        id:
          type: integer
        bicycleReview:
          type: integer
      accessoryReview:
        type: integer
      suggestions:
        type: string
      parkingSpot:
        type: string
      booking:
        $ref: "#/components/schemas/Booking"
      bookingId:
        type: integer
    UpgradeInput:
      type: object
      properties:
        qrCode:
          type: string
        userId:
          type: integer
        lights:
          type: integer
        ulock:
          type: integer
        reflector:
          type: integer
    BookingInput:
      type: object
      properties:
        userId:
          type: integer
        bicycleId:
          type: integer
    Booking:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        bicycleId:
          type: integer
        end:
          type: string
        start:
          type: string
        user:
          $ref: "#/components/schemas/User"
        bicycle:
          $ref: "#/components/schemas/Bicycle"
        ulock:
          type: integer
        lights:
          type: integer
        reflector:
          type: integer
        helmet:
          type: integer
    BicycleModelInput:
      type: object
      properties:
        image:
          type: string
        name:
          type: string
        description:
          type: string
    BicycleModel:
      type: object
      properties:
        id:
          type: integer
        image:
          type: string
        name:
          type: string
        description:
          type: string
    SubmissionInput:
      type: object
      properties:
        bicycleModelId:
          type: integer
        userId:
          type: integer
    Submission:
      type: object
      properties:
        bicycleModelId:
          type: integer
        userId:
          type: integer
        user:
          $ref: "#/components/schemas/User"
        model:
          $ref: "#/components/schemas/BicycleModel"
        createdAt:
          type: string
    BicycleInput:
      type: object
      properties:
        qrCode:
          type: string
        status:
          type: string
        modelId:
          type: integer
        image:
          type: string
      required:
        - qrCode
        - status
        - model
    Bicycle:
      type: object
      properties:
        id:
          type: integer
        qrCode:
          type: string
        status:
          type: string
        model:
          $ref: "#/components/schemas/BicycleModel"
        modelId:
          type: integer
        image:
          type: string
        booking:
          $ref: "#/components/schemas/Booking"
        fleet:
          type: string
    UserInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    ChangePasswordInput:
      type: object
      properties:
        token:
          type: string
        password:
          type: string
      required:
        - token
        - password
    TokenInput:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        isAdmin:
          type: boolean
        isStaff:
          type: boolean
        createdAt:
          type: string
        name:
          type: string
        lastName:
          type: string
        birthday:
          type: string
        address:
          type: string
        city:
          type: string
        occupancy:
          type: string
        rut:
          type: string
        passport:
          type: string
        unidadAcademica:
          type: string
    BicycleHistoryInput:
      type: object
      properties:
        bicycleId:
          type: integer
        description:
          type: string
    BicycleHistory:
      type: object
      properties:
        id:
          type: integer
        bicycle:
          $ref: "#/components/schemas/Bicycle"
        bicycleId:
          type: integer
        description:
          type: string
    UserHistoryInput:
      type: object
      properties:
        userId:
          type: integer
        description:
          type: string
    UserHistory:
      type: object
      properties:
        id:
          type: integer
        user:
          $ref: "#/components/schemas/User"
        userId:
          type: integer
        description:
          type: string
    Error:
      type: object
      properties:
        status:
          type: string
        es:
          type: string
        en:
          type: string
    Token:
      type: object
      properties:
        x-access-token:
          type: string
        status:
          type: string
  parameters:
    bicycleModelId:
      in: path
      name: id
      description: The id of the bicycle model.
      required: true
      schema:
        type: integer
    bicycleHistoryId:
      in: path
      name: id
      description: The id of the bicycle history.
      required: true
      schema:
        type: integer
    userHistoryId:
      in: path
      name: id
      description: The id of the user history.
      required: true
      schema:
        type: integer
    bicycleId:
      in: path
      name: id
      description: Bicycle id.
      required: true
      schema:
        type: integer
    bookingId:
      in: path
      name: id
      description: Bicycle id.
      required: true
      schema:
        type: integer
    userId:
      in: path
      name: id
      description: User id.
      required: true
      schema:
        type: integer
    take:
      in: query
      name: take
      required: false
      schema:
        type: integer
      description: the number of elements to return.
    skip:
      in: query
      name: skip
      required: false
      schema:
        type: integer
      description: the number of elements to skip before tarting to collect the result set.
    x-access-token:
      in: header
      name: "x-access-token"
      description: Authentication access token.
      required: true
      schema:
        type: string
    x-access-token-optional:
      in: header
      name: "x-access-token"
      description: Authentication access token.
      required: false
      schema:
        type: string
